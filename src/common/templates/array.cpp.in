

/** THIS FILE IS AUTOGENERATED DO NOT EDIT THIS FILE. **/

#include "@FDB_PREFIX@_array.h"
#include <common/memory/memory.h>

#include <string.h>

@FDB_INCLUDE@


@FDB_PREFIX@_array_t
@FDB_PREFIX@_array_init()
{
  @FDB_PREFIX@_array_t array;
  array.m_count = 0;
  array.m_capacity = 16;
  array.m_data = (@FDB_TYPE@*)mem_alloc(fdb_get_global_mem_allocator(), 
                           64, 
                           sizeof(@FDB_TYPE@)*array.m_capacity, 
                           FDB_NO_HINT);
  return array;
}

void
@FDB_PREFIX@_array_release(@FDB_PREFIX@_array_t* array)
{
  mem_free(fdb_get_global_mem_allocator(), array->m_data);
}

void
@FDB_PREFIX@_array_append(@FDB_PREFIX@_array_t* array, @FDB_TYPE@* e)
{
  if(array->m_count == array->m_capacity)
  {
    uint32_t tmp = array->m_capacity*2;
    @FDB_TYPE@* buffer = (@FDB_TYPE@*)mem_alloc(fdb_get_global_mem_allocator(), 
                             64, 
                             sizeof(@FDB_TYPE@)*tmp, 
                             FDB_NO_HINT);
    memcpy(buffer, array->m_data, sizeof(@FDB_TYPE@)*array->m_capacity);
    array->m_capacity = tmp;
    mem_free(fdb_get_global_mem_allocator(), array->m_data);
    array->m_data = buffer;
  }

  array->m_data[array->m_count++] = *e;
}

void
@FDB_PREFIX@_array_copy(@FDB_PREFIX@_array_t* dst, 
                            @FDB_PREFIX@_array_t* src)
{
  if(dst->m_capacity < src->m_capacity)
  {
    mem_free(fdb_get_global_mem_allocator(), dst->m_data);
    dst->m_capacity = src->m_capacity;
    dst->m_data = (@FDB_TYPE@*)mem_alloc(fdb_get_global_mem_allocator(), 
                            64, 
                            sizeof(@FDB_TYPE@)*dst->m_capacity, 
                            FDB_NO_HINT);
  }
  dst->m_count = src->m_count;
  memcpy(dst->m_data, src->m_data, sizeof(@FDB_TYPE@)*dst->m_count);
}

